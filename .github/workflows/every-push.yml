name: 'every-push'

on: push

jobs:
  build:
    name: check lint, typecheck, build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ secrets.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          # node_modules라는 폴더를 검사하여
          path: node_modules
          # 아래 키값으로 cache가 돼있는지 확인합니다.
          key: npm-packages-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        # 위 step에서 node_modules에 대한 cache 검사를 했잖아요?
        # 만약 모듈에 변한 게 있다면 `yarn install`을 실행하고 아니면 해당 step을 건너뛰게 됩니다.
        # if 키워드는 해당 스텝을 실행할지 말지를 결정할 수 있는 키워드예요.
        # `steps.cache.outputs.cache-hit`이 값은 무엇일까요?
        # 위 step에서 정했던 cache라는 id를 steps.cache로 가져올 수 있어요.
        # cache라는 id 값을 가진 step에서는 cache-hit라는 output을 내뱉네요?
        # 그걸로 cache가 hit 됐는지 안 됐는지를 알 수 있나봐요!
        # 그 값이 true가 아닐 때만 yarn install을 하겠죠?
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - run: yarn lint
        if: ${{ always() }}
      - run: yarn typecheck
        if: ${{ always() }}
      - run: yarn build
        if: ${{ always() }}

      # 토이프로젝트 슬랙이라 팀원들한테 알림이 계속 발생하는 관계로 주석처리하였습니다.
      # - name: Send slack when failed
      #   if: ${{ failure() }}
      #   # 직접 '만든' Action이므로 uses 키워드를 이용해서 아래 경로를 입력해줍니다.
      #   uses: ./.github/actions/slack-notify
      #   with:
      #     slack_incoming_url: ${{ secrets.SLACK_INCOMING_URL }}

      # - name: Send slack if completed
      #   if: ${{ success() }}
      #   uses: ./.github/actions/slack-notify
      #   with:
      #     status: success
      #     slack_incoming_url: ${{ secrets.SLACK_INCOMING_URL }}
